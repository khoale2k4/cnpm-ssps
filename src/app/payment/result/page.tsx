"use client";

import { useEffect, useState } from "react";
import { useRouter } from "next/navigation";

export default function PaymentResult() {
  const [message, setMessage] = useState<string>("");
  const [success, setSuccess] = useState<boolean>(false);
  const router = useRouter();

  useEffect(() => {
    // L·∫•y c√°c tham s·ªë t·ª´ URL
    const queryParams = new URLSearchParams(window.location.search);
    const resultCode = queryParams.get("resultCode");
    const message = queryParams.get("message");

    // Ki·ªÉm tra tr·∫°ng th√°i giao d·ªãch
    if (resultCode === "0") {
      setMessage("Thanh to√°n th√†nh c√¥ng! C·∫£m ∆°n b·∫°n ƒë√£ s·ª≠ d·ª•ng d·ªãch v·ª•.");
      setSuccess(true);

      // C·∫≠p nh·∫≠t tr·∫°ng th√°i c·ªßa ng∆∞·ªùi d√πng (n·∫øu c·∫ßn thi·∫øt)
      // G·ª≠i API ƒë·ªÉ c·ªông s·ªë trang in ƒë√£ mua
      const updateUserStatus = async () => {
        try {
          const token = localStorage.getItem("accessToken");
          const userId = localStorage.getItem("userId");

          if (!token || !userId) {
            // console.error("Token ho·∫∑c userId kh√¥ng t·ªìn t·∫°i.");
            return;
          }

          // G·ªçi API c·∫≠p nh·∫≠t s·ªë trang
          await fetch("/api/user/update-pages", {
            method: "POST",
            headers: {
              "Content-Type": "application/json",
              Authorization: `Bearer ${token}`,
            },
            body: JSON.stringify({
              userId,
              pages: queryParams.get("amount"), // S·ªë trang mua
            }),
          });
        } catch (error) {
          // console.error("C·∫≠p nh·∫≠t th·∫•t b·∫°i:", error);
        }
      };

      updateUserStatus();
    } else {
      setMessage(`Thanh to√°n th·∫•t b·∫°i: ${message || "Vui l√≤ng th·ª≠ l·∫°i sau."}`);
      setSuccess(false);
    }
  }, []);

  return (
    <div className="flex flex-col items-center justify-center min-h-screen">
      <div className="bg-white p-8 rounded-lg shadow-lg text-center">
        <h2
          className={`text-2xl font-bold ${
            success ? "text-green-500" : "text-red-500"
          }`}
        >
          {success ? "üéâ Th√†nh c√¥ng!" : "‚ùå L·ªói!"}
        </h2>
        <p className="mt-4 text-gray-700">{message}</p>
        <button
          onClick={() => router.push("/payment")}
          className="mt-4 px-4 py-2 bg-blue-500 text-white rounded"
        >
          V·ªÅ trang thanh to√°n
        </button>
      </div>
    </div>
  );
}
